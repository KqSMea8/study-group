NB: Some other stuff was running on my computer at this time
so the benchmarks are slower than for ex2.4 and ex2.5....
but running ex2.4 and ex2.5 now would show the same times as here.

However the relative results remain the same, and the
expected timing of clearing being half that of shifting is shown.

Using a lookup table remained consistently the fastest and not using a 
loop remains a little faster than when consulting the loop.

$ go test -v
=== RUN   TestAllPopCountsAreEqual
2019/02/10 23:34:26 32
2019/02/10 23:34:26 32
2019/02/10 23:34:26 32
2019/02/10 23:34:26 32
--- PASS: TestAllPopCountsAreEqual (0.00s)
=== RUN   TestTimings
PopCount took an average of 249ns
PopCountLoop took an average of 283ns
PopCountShift took an average of 451ns
PopCountClear took an average of 286ns
--- PASS: TestTimings (2.19s)
PASS
ok  	_/Users/ilanpillemer/git/study-group/workspaces/ilanpillemer/solutions/ch2/ex2.5	2.207s
$